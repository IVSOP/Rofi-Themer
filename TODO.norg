* (-) main features
** (x) Add saving to a file. keep the order of the json!!!
** ( ) Add tray support, copy nm-applet
** (-) Error logging
*** (-) IMPORTANT: allow Rofi-themer-read to give invalid output (catch exception from json)
*** (x) Make the logging API (write to /tmp, support spacing according to depth in the stack, etc)
*** ( ) Use logs to say where I am in the parsing process, with the correct spacing
*** ( ) Catch errors when parsing json, output to log
*** ( ) When num of options < num of themes, error (how to catch this? I would have to parse things twice? Or just display error when menu is queried?)
*** ( ) When option is empty string, default to the first non-empty option. If all options are empty then get fucked, store empty strings or error out
*** ( ) Validade json against some schema to ensure correct data types?
*** ( ) Check things like numbers, strings and lists actually have that type, otherwise log error and exit

* ( ) optimizations
** ( ) Change so that number of each theme used is kept on each object and not calculated constantly (I think it recurses down each time it is needed, might have changed this already and forgor)
** ( ) Currently, saving creates 1 json object for each table, copies json objects constantly, and linear searches for things that are tables
** ( ) IMPORTANT: at least only save when something is actually written/changed, currently I save even when just traversing menus
  
* (-) QOL
** ( ) Document the functions
** ( ) Abstract traversing elements, make it receive a function or something
** ( ) Add to main menu number of items active of each theme (is this done already??)
** ( ) Make Data parser call func to calculate themes (is this done already???)
** ( ) Check for empty strings in apply, so that option does not exist
** ( ) Complete rework of crash and log so I can specify if I want to print or output to file, select which file, etc. there is probably some lib for this already

